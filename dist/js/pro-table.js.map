{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Header.js","webpack:///./src/components/pagination/RowsPerPage.js","webpack:///./src/components/pagination/SimplePagination.js","webpack:///./src/components/search/Input.js","webpack:///./src/components/table/ProTable.js","webpack:///./src/components/table/TBody.js","webpack:///./src/components/table/TFoot.js","webpack:///./src/components/table/THead.js","webpack:///./src/components/table/Td.js","webpack:///./src/components/table/Th.js","webpack:///./src/components/table/Tr.js","webpack:///./src/helpers/from-array.js","webpack:///./src/helpers/from-dom-table.js","webpack:///./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;AClFA;AAAkC;;AAElC;AACA,eAAe,WAAW;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,6DAAK,EAAE,0BAA0B;AACvD;AACA;AACA;;AAEe,+DAAM;;;;;;;;;;;;;;ACrBrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEe,oEAAW;;;;;;;;;;;;;;ACzC1B;AAAuC;;AAEvC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,4DAAW;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,MAAM,GAAG,kCAAkC,MAAM,UAAU;;AAEzF;AACA;AACA;AACA;;AAEe,yEAAgB;;;;;;;;;;;;;;AC/D/B;AACA,gBAAgB,WAAW;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,8DAAK;;;;;;;;;;;;;;AClBpB;AAAA;AAAA;AAAA;AAAA;AAA+B;AACN;AACE;AACA;AACG;;AAE9B;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA,sBAAsB,uDAAM,EAAE,iBAAiB;AAC/C;AACA;;AAEA,mBAAmB,gBAAgB;AACnC,qBAAqB,oDAAK;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,sDAAK;AAC1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,sDAAK;AAC1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,iBAAiB;AAC9B,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,iEAAQ;;;;;;;;;;;;;;ACtHvB;AAAA;AAAqB;AACA;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,mDAAE;AACvB;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,qCAAqC;AACvD;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,mDAAE;AACvB,qBAAqB,mDAAE;AACvB;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEe,8D;;;;;;;;;;;;;AClIf;AAAA;AAAA;AAAqB;AACA;AACwC;;AAE7D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC,4EAAgB;;AAEhD;AACA,mBAAmB,mDAAE;;AAErB,mBAAmB,mDAAE;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,8DAAK;;;;;;;;;;;;;;ACnDpB;AAAA;AAAA;AAAqB;AACA;;AAErB;;AAEA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA,aAAa,EAAE,EAAE;AACjB;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,cAAc;AACvB,iBAAiB,mDAAE;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAE;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,cAAc,mDAAE;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;;AAEL,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEe,2EAAC,QAAQ;AACR;;;;;;;;;;;;;;AChHhB;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,eAAe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,2DAAE;;;;;;;;;;;;;;ACrCjB;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,0BAA0B,EAAE,iCAAiC;AAChG;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sCAAsC;AACtC;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,2DAAE;;;;;;;;;;;;;;AC9GjB;AAAA;AAAA;AAAqB;AACA;;AAErB;AACA;AACA;AACA;AACA;;AAEA,UAAU,aAAa;AACvB,mBAAmB,mDAAE,EAAE,oBAAoB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,mBAAmB,mDAAE;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEe,2DAAE;AACJ;;;;;;;;;;;;;;ACnDb;AAAmD;;AAEnD;AACA;;AAEA;;AAEA,uBAAuB,0EAAQ;AAC/B;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,aAAa,GAAG,aAAa;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uCAAuC;AACjE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEe,kEAAS;;;;;;;;;;;;;;AC5CxB;AAAmD;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,0EAAQ;AAC/B;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEe,qEAAY;;;;;;;;;;;;;;AC7C3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACI;AACE;;AAEnC;AACf,EAAE,8EAAS;AACX,EAAE,oFAAQ;AACV,CAAC;;AAMA","file":"js/pro-table.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Input from \"./search/Input\"\n\nclass Header {\n  constructor({ proTable }) {\n    this.proTable = proTable\n\n    this.$dom = document.createElement('header')\n    this._applyStyles()\n    this._createSearch()\n  }\n\n  _applyStyles () {\n    this.$dom.style.textAlign = 'right'\n  }\n\n  _createSearch () {\n    this.search = new Input({ proTable: this.proTable })\n    this.$dom.appendChild(this.search.$dom)\n  }\n}\n\nexport default Header\n","class RowsPerPage {\n  constructor(proTable) {\n    this.proTable = proTable\n\n    this.$dom = document.createElement('div')\n    this.$dom.style.display = 'inline-block'\n    this.$dom.style.marginRight = '1rem'\n\n    this._createSpan()\n    this._createSelect()\n  }\n\n  _createSpan () {\n    const span = document.createElement('span')\n    span.innerText = 'Rows per page:'\n    span.style.marginRight = '1rem'\n\n    this.$dom.appendChild(span)\n  }\n\n  _createSelect () {\n    const selectedLimit = this.proTable.options.limit\n    this.$select = document.createElement('select');\n\n    ([5, 10, 25, 50, 100, 250, 500]).forEach(limit => {\n      const option = document.createElement('option')\n      option.value = limit\n      option.innerText = limit\n      option.selected = parseInt(selectedLimit) === limit\n\n      this.$select.appendChild(option)\n    })\n\n    this.$select.addEventListener('change', e => {\n      this.proTable.setLimit(this.$select.value)\n    })\n\n    this.$dom.appendChild(this.$select)\n  }\n}\n\nexport default RowsPerPage\n","import RowsPerPage from \"./RowsPerPage\"\n\nclass SimplePagination {\n  constructor(proTable) {\n    this.proTable = proTable\n\n    this.$dom = document.createElement('div')\n\n    this._createRowsPerPage()\n    this._createSpan()\n    this._createPrevButton()\n    this._createNextButton()\n    this.render()\n  }\n\n  _createRowsPerPage () {\n    this.rowsPerPage = new RowsPerPage(this.proTable)\n    this.$dom.appendChild(this.rowsPerPage.$dom)\n  }\n\n  _createSpan () {\n    this.$span = document.createElement('span')\n    this.$span.style.marginRight = '1rem'\n    this.$dom.appendChild(this.$span)\n  }\n  \n  _createNextButton () {\n    this.$btnNext = document.createElement('button')\n    this.$btnNext.innerText = 'Next'\n    \n    this.$btnNext.addEventListener('click', e => {\n      this.proTable.setPage(this.proTable.options.page + 1)\n    })\n\n    this.$dom.appendChild(this.$btnNext)\n  }\n\n  _createPrevButton () {\n    this.$btnPrev = document.createElement('button')\n    this.$btnPrev.innerText = 'Prev'\n    \n    this.$dom.appendChild(this.$btnPrev)\n    \n    this.$btnPrev.addEventListener('click', e => {\n      this.proTable.setPage(this.proTable.options.page - 1)\n    })\n  }\n  \n  render () {\n    const limit = this.proTable.options.limit\n    const page = this.proTable.options.page\n    const start = ((page - 1) * limit) + 1\n    const to = start + limit - 1\n    const totalRows = this.proTable.tbody.filteredTrs.length\n    const lastPage = Math.ceil(totalRows / limit)\n\n    this.$span.innerText = `${start}-${(to > totalRows ? totalRows : to)} of ${totalRows}`\n\n    this.$btnPrev.disabled = page === 1\n    this.$btnNext.disabled = page === lastPage\n  }\n}\n\nexport default SimplePagination\n","class Input {\n  constructor ({ proTable }) {\n    this.proTable = proTable\n\n    this._createInput()\n  }\n\n  _createInput () {\n    this.$dom = document.createElement('input')\n    this.$dom.placeholder = 'Search'\n    this.$dom.addEventListener('keyup', this._onKeyUp.bind(this))\n  }\n\n  _onKeyUp () {\n    this.proTable.setKeyword(this.$dom.value)\n  }\n}\n\nexport default Input\n","import { THead } from './THead'\nimport { Tr } from './Tr'\nimport TBody from './TBody'\nimport TFoot from './TFoot'\nimport Header from '../Header'\n\nclass ProTable {\n  constructor(elId, options) {\n    this.elId = elId\n\n    const defaultOptions = {\n      classes: [],\n      thead: {},\n      limit: 10,\n      page: 1,\n      keyword: null,\n      pagination: 'simple',\n      order: {\n        key: null,\n        direction: null\n      }\n    }\n\n    this.options = { ...defaultOptions, ...options }\n    this.thead = null\n    this.tbody = null\n    this.$dom = document.createElement('section')\n    this.$dom.classList.add('pro-table')\n  }\n\n  generateTable ({ columns, rows }) {\n    this.columns = columns\n    this.rows = rows\n    this.$table = document.createElement('table')\n    this.$dom.appendChild(this.$table)\n    this._generateHeader()\n    this._generateThead({ columns, rows })\n    this._generateTbody()\n    this._generateTFoot()\n\n    // apply options\n    if (this.options.classes) {\n      this.options.classes.forEach(_class => {\n        this.$table.classList.add(_class)\n      })\n    }\n\n    console.log(this.$table)\n  }\n\n  _generateHeader () {\n    this.header = new Header({ proTable: this })\n    this.$dom.prepend(this.header.$dom)\n  }\n\n  _generateThead ({ columns, rows }) {\n    this.thead = new THead({\n      columns,\n      proTable: this,\n      options: this.options.thead\n    })\n    this.$table.appendChild(this.thead.$dom)\n  }\n  \n  _generateTbody () {\n    if (this.tbody) {\n      this.$table.removeChild(this.tbody.$dom)\n    }\n\n    this.tbody = new TBody(this)\n    this.$table.appendChild(this.tbody.$dom)\n  }\n\n  _generateTFoot () {\n    if (this.tfoot) {\n      this.$table.removeChild(this.tfoot.$dom)\n    }\n\n    this.tfoot = new TFoot(this)\n    this.$table.appendChild(this.tfoot.$dom)\n  }\n\n  setKeyword (keyword) {\n    this.options.keyword = keyword\n    this.setPage(1)\n  }\n\n  setPage (page) {\n    this.options.page = page\n\n    if (page < 1) {\n      this.options.page = 1\n    }\n\n    this.tbody.render()\n    this.tfoot.render()\n  }\n\n  setLimit (limit) {\n    this.options.page = 1\n    this.options.limit = parseInt(limit)\n\n    this.tbody.render()\n    this.tfoot.render()\n  }\n\n  setOrder ({ key, direction }) {\n    this.options.order = { key, direction }\n    \n    this.thead.render()\n    this.setPage(1)\n  }\n\n  draw () {\n    document.querySelector(this.elId).appendChild(this.$dom)\n  }\n}\n\nexport default ProTable\n","import Tr from \"./Tr\"\nimport Td from \"./Td\"\n\nclass TBody {\n  constructor(proTable) {\n    this.$dom = document.createElement('tbody')\n    this.proTable = proTable\n    this.trs = this.generateTrs(this.proTable.columns, this.proTable.rows)\n    console.log(this.trs)\n\n    console.log('TBody', 'constructor')\n\n    this.render()\n  }\n\n  generateTrs (columns, rows) {\n    const trs = []\n\n    rows.forEach(_row => {\n      const tr = new Tr()\n      tr.addTds(this.generateTds(columns, _row))\n      trs.push(tr)\n    })\n\n    return trs\n  }\n\n  generateTds (columns, _row) {\n    let tds = []\n\n    columns.forEach(_column => {\n      if (_column !== null && _column.constructor === Object) {\n        // call generateTds recursively\n        tds = tds.concat(\n          this.generateTds(Object.values(_column)[0], _row[Object.keys(_column)[0]])\n        )\n      } else {\n        tds.push({ key: _column, label: _row[_column] })\n      }\n    })\n\n    console.log('generateTds', tds)\n\n    return tds\n  }\n\n  /**\n   * rendering trs\n   *\n   * @memberof TBody\n   */\n  render () {\n    // delete rendered trs\n    while (this.$dom.lastChild) {\n      this.$dom.removeChild(this.$dom.lastChild)\n    }\n\n    const limit = this.proTable.options.limit\n    const page = this.proTable.options.page\n    const start = ((page - 1) * limit)\n\n    this.filteredTrs\n      .sort(this._sort.bind(this))\n      .slice(start, this.proTable.options.limit * page)\n      .forEach(_tr => this.$dom.appendChild(_tr.$dom))\n\n    // if there is no result for given keyword\n    if (this.filteredTrs.length < 1 && this.proTable.options.keyword) {\n      const tr = new Tr()\n      const td = new Td({\n        child: 'Not matching records found',\n        options: {\n          attrs: {\n            colspan: this.proTable.thead.columnsCount\n          },\n          style: {\n            textAlign: 'center'\n          }\n        }\n      })\n\n      tr.pushTd(td)\n      this.$dom.appendChild(tr.$dom)\n    }\n  }\n\n  get filteredTrs () {\n    return this.trs\n      .filter(this._filter.bind(this))\n  }\n\n  /**\n   * Filter by Tr\n   *\n   * @param {*} _tr\n   * @memberof TBody\n   */\n  _filter (_tr) {\n    const keyword = this.proTable.options.keyword || ''\n\n    return !!_tr.childs.find(_child => {\n      return _child\n        .$dom\n        .innerText\n        .toLowerCase()\n        .indexOf(\n          keyword.toLowerCase()\n        ) > -1\n    })\n  }\n\n  _sort (a, b) {\n    const order = this.proTable.options.order\n\n    if (order.key) {\n      const tdA = a.childs.find(_td => _td.key === order.key)\n      const tdB = b.childs.find(_td => _td.key === order.key)\n      \n      // ascending\n      if (order.direction === 'asc') {\n        return tdA.$dom.innerText > tdB.$dom.innerText ? 1 : -1\n      } else {\n        return tdA.$dom.innerText > tdB.$dom.innerText ? -1 : 1\n      }\n    }\n\n    return 0\n  }\n}\n\nexport default TBody","import Tr from \"./Tr\"\nimport Td from \"./Td\"\nimport SimplePagination from \"../pagination/SimplePagination\"\n\nclass TFoot {\n  \n  constructor(proTable) {\n    this.proTable = proTable\n    this.$dom = document.createElement('tfoot')\n    this.trs = []\n\n    if (this.proTable.options.pagination == 'simple') {\n      this.createSimplePagination()\n    }\n\n    this.trs.forEach(_tr => this.$dom.appendChild(_tr.$dom))\n  }\n\n  createSimplePagination () {\n    if (this.proTable.tbody.trs.length < this.proTable.options.limit) {\n      return\n    }\n\n    this.simplePagination = new SimplePagination(this.proTable)\n\n    const columnsCount = this.proTable.thead.columnsCount\n    const tr = new Tr()\n\n    const td = new Td({\n      child: this.simplePagination.$dom,\n      options: {\n          attrs: {\n          colspan: columnsCount\n        },\n        style: {\n          textAlign: 'right'\n        }\n      }\n    })\n\n    tr.pushTd(td)\n    this.trs.push(tr)\n  }\n\n  render () {\n    if (this.proTable.options.pagination == 'simple' && this.simplePagination) {\n      this.simplePagination.render()\n    }\n  }\n}\n\nexport default TFoot\n","import Tr from \"./Tr\"\nimport Th from \"./Th\"\n\nclass THead {\n\n  /**\n   * Creates an instance of THead.\n   *\n   * The params columns can be like: [\"a\", \"b\", { c: [\"d\", \"e\", \"f\"] }]\n   * \n   * @param {*} { columns, proTable, options }\n   * @memberof THead\n   */\n  constructor ({ columns, proTable, options }) {\n    this.options = {\n      thClasses: [],\n      ...options\n    }\n    this.proTable = proTable\n    this.$dom = document.createElement('thead')\n    this.trs = this.generateTrs(columns)\n    this.columnsCount = (() => {\n      return this.trs[0].childs\n        .map(th => th.options.attrs.colspan)\n        .reduce((a, b) => a + b)\n    })()\n\n    console.log('trs', this.trs)\n    this.columns = columns\n\n    // append child\n    this.trs.forEach(tr => this.$dom.appendChild(tr.$dom))\n  }\n\n  generateTrs (columns) {\n    let trs = []\n    \n    let { ths, childs } = this.generateThs(columns)\n    let tr = new Tr()\n    \n    ths.forEach(_th => tr.pushTh(_th))\n    trs.push(tr)\n\n    if (childs.length) {\n      trs = trs.concat(this.generateTrs(childs))\n    }\n    \n    // add rowspan to th that has not colspan attr\n    // and fix colspan as its child\n    tr.childs.forEach(_th => {\n      if (_th.options.attrs.colspan === 1) {\n        _th.$dom.setAttribute('rowspan', trs.length)\n      }\n    })\n\n    return trs\n  }\n\n  generateThs (columns) {\n    let ths = []\n    let childs = []\n\n    columns.forEach(_col => {\n      if (_col !== null && _col.constructor === Object) {\n        const key = Object.keys(_col)[0]\n        ths.push(new Th({\n          key,\n          proTable: this.proTable,\n          options: {\n            attrs: {\n              colspan: this.getColspan(_col[key])\n            },\n            classes: this.options.thClasses\n          }\n        }))\n        childs = childs.concat(_col[key])\n      } else {\n        ths.push(\n          new Th({\n            key: _col, \n            proTable: this.proTable,\n            options: {\n              classes: this.options.thClasses\n            }\n          })\n        )\n      }\n    })\n\n    return { ths, childs }\n  }\n\n  getColspan (columns) {\n    let colspan = columns.length\n\n    columns.forEach(_col => {\n      if ((_col !== null && _col.constructor === Object)) {\n        colspan += this.getColspan(_col[Object.keys(_col)[0]]) - 1\n      }\n    })\n\n    return colspan\n  }\n\n  render () {\n    this.trs.forEach(_tr => {\n      _tr.childs.forEach(_child => _child.render())\n    })\n  }\n}\n\nexport default { THead }\nexport { THead }\n","class Td {\n  constructor ({ key, child, options }) {\n    this.key = key\n    if (child instanceof Node) {\n      this.buildDOMFromNode(child)\n    } else {\n      this.buildDOMFromString(child)\n    }\n\n    this.options = {\n      attrs: {\n        colspan: 1\n      },\n      style: {},\n      ...options\n    }\n\n    for (const attr in this.options.attrs) {\n      this.$dom.setAttribute(attr, this.options.attrs[attr])\n    }\n\n    for (const style in this.options.style) {\n      this.$dom.style[style] = this.options.style[style]\n    }\n  }\n\n  buildDOMFromString (child) {\n    this.$dom = document.createElement('td')\n    this.$dom.innerHTML = child || '-'\n  }\n\n  buildDOMFromNode (node) {\n    this.$dom = document.createElement('td')\n    this.$dom.appendChild(node)\n  }\n}\n\nexport default Td\n","class Th {\n  constructor ({ key, proTable, options }) {\n    this.key = key\n    this.proTable = proTable\n    this.$dom = document.createElement('th')\n\n    this.options = {\n      attrs: {\n        colspan: 1\n      },\n      orderabel: true,\n      ...options\n    }\n\n    this._createContainer()\n    this._createSpan()\n    this._applyAttributes()\n    this._applyClasses()\n    this._applyOrderable()\n  }\n\n  _createContainer () {\n    this.$container = document.createElement('div')\n    this.$container.style.display = 'flex'\n    this.$container.style.justifyContent = 'space-between'\n    this.$container.style.alignItems = 'center'\n\n    this.$dom.appendChild(this.$container)\n  }\n\n  _applyAttributes () {\n    for (const attr in this.options.attrs) {\n      this.$dom.setAttribute(attr, this.options.attrs[attr])\n    }\n  }\n\n  _applyClasses () {\n    if (this.options.classes) {\n      this.options.classes.forEach(_class => this.$dom.classList.add(_class))\n    }\n  }\n\n  _createSpan () {\n    this.$spanLabel = document.createElement('span')\n    this.$spanLabel.innerHTML = `${this.key[0].toUpperCase()}${this.key.toLowerCase().substr(1)}` || '-'\n    this.$container.appendChild(this.$spanLabel)\n  }\n\n  _isOrderable () {\n    return this.options.orderabel && this.options.attrs.colspan === 1\n  }\n\n  _applyOrderable () {\n    if (!this._isOrderable()) {\n      return\n    }\n\n    this.$container.style.cursor = 'pointer'\n\n    this.$spanTop = document.createElement('span')\n    this.$spanTop.innerHTML = '&#9652;'\n    this.$spanTop.style.marginBottom = '-4px'\n\n    this.$spanBottom = document.createElement('span')\n    this.$spanBottom.innerHTML = '&#9662;'\n    this.$spanBottom.style.marginTop = '-4px'\n\n    this.$orderDom = document.createElement('div')\n    this.$orderDom.appendChild(this.$spanTop)\n    this.$orderDom.appendChild(this.$spanBottom)\n    this.$orderDom.style.display = 'inline-flex'\n    this.$orderDom.style.flexDirection = 'column'\n    this.$orderDom.style.justifyContent = 'center'\n    this.$orderDom.style.fontSize = '70%'\n    this.$orderDom.style.height = '20px'\n    this.$orderDom.style.opacity = 0.3\n    this.$container.appendChild(this.$orderDom)\n\n    this.$dom.addEventListener('click', e => {\n      this._toggleOrder()\n    })\n  }\n  \n  _toggleOrder () {\n    const order = this.proTable.options.order\n    let payload = {\n      key: this.key,\n      direction: 'asc'\n    }\n\n    if (order.key === this.key) {\n      payload.direction = order.direction === 'desc' ? 'asc' : 'desc'\n    }\n\n    this.proTable.setOrder(payload)\n  }\n\n  render () {\n    if (this._isOrderable()) {\n      const order = this.proTable.options.order;\n  \n      this.$spanTop.style.visibility = order.key === this.key &&\n        order.direction === 'desc' ?'hidden' : ''\n  \n      this.$spanBottom.style.visibility = order.key === this.key &&\n        order.direction === 'asc' ?'hidden' : ''\n    }\n  }\n}\n\nexport default Th\n","import Td from './Td'\nimport Th from './Th'\n\nclass Tr {\n  constructor () {\n    this.$dom = document.createElement('tr')\n    this.childs = []\n  }\n\n  addTd ({ key, label }) {\n    const td = new Td({ key, child: label })\n    this.childs.push(td)\n    this.$dom.appendChild(td.$dom)\n  }\n\n  pushTd (td) {\n    this.childs.push(td)\n    this.$dom.appendChild(td.$dom)\n  }\n\n  addTds (array) {\n    // _item = { key, label }\n\n    array.forEach(_item => {\n      this.addTd(_item)\n    })\n    \n    return this\n  }\n\n  addTh (column, options) {\n    const th = new Th(column, options)\n    this.childs.push(th)\n    this.$dom.appendChild(th.$dom)\n  }\n\n  pushTh (th) {\n    this.childs.push(th)\n    this.$dom.appendChild(th.$dom)\n  }\n\n  addThs (array) {\n    array.forEach(_item => {\n      this.addTh(_item)\n    })\n    \n    return this\n  }\n}\n\nexport default Tr\nexport { Tr }\n","import ProTable from '../components/table/ProTable'\n\nconst fromArray = (elId, array, options) => {\n  const columns = generateColumns(array)\n\n  console.log('columns', columns)\n\n  const proTable = new ProTable(elId, options)\n  proTable.generateTable({\n    columns,\n    rows: array\n  })\n\n  proTable.draw()\n}\n\n/**\n * \n * @param [{ key: value }, { key: value }] array \n */\nconst generateColumns = array => {\n  const columns = []\n  const objectColumns = []\n\n  array.forEach(_item => {\n    for (const key in _item) {\n      if (!columns.find(_column => _column === key)) {\n        // check wheter the value is an object\n        if (_item[key] !== null && _item[key].constructor === Object) {\n          // call generateColumns recursively\n          if (!objectColumns.find(_objectColumn => _objectColumn === key)) {\n            objectColumns.push(key)\n            columns.push({ [key]: generateColumns([_item[key]]) })\n          }\n        } else {\n          columns.push(key)\n        }\n      }\n    }\n  })\n\n  return columns\n}\n\nexport default fromArray\n","import ProTable from \"../components/table/ProTable\"\n\nconst fromDOMTable = (selector, options) => {\n  const dom = document.querySelector(selector)\n  const columns = getColumnsFromDom(dom)\n  const rows = getRowsFromDom(dom, columns)\n\n  console.log('fromTable', 'dom:', dom)\n  console.log('fromTable', 'columns:', columns)\n  console.log('fromTable', 'rows:', rows)\n\n  const proTable = new ProTable(null, options)\n  proTable.generateTable({\n    columns,\n    rows\n  })\n\n  console.log('fromTable', 'proTable:', proTable.$dom)\n\n  // replace the dom input\n  dom.replaceWith(proTable.$dom)\n}\n\nfunction getColumnsFromDom (table) {\n  const firstTr = table.querySelector('thead tr')\n\n  return Array.from(firstTr.children)\n    .map(_child => _child.innerText)\n}\n\nfunction getRowsFromDom (table, columns) {\n  const trs = table.querySelectorAll('tbody tr')\n\n  return Array.from(trs)\n    .map(_tr => {\n      const row = {}\n\n      columns.forEach((_column, _index) => {\n        row[_column] = _tr.children[_index].innerText\n      })\n\n      return row\n    })\n}\n\nexport default fromDOMTable\n","import fromArray from './helpers/from-array'\nimport fromTable from './helpers/from-dom-table'\nimport ProTable from './components/table/ProTable'\n\nexport default {\n  fromArray,\n  ProTable\n}\n\nexport {\n  fromArray,\n  fromTable,\n  ProTable\n}\n"],"sourceRoot":""}